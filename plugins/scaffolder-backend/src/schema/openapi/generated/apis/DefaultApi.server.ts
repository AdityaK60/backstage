/*
 * Copyright 2024 The Backstage Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// ******************************************************************
// * THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY. *
// ******************************************************************
import { Action } from '../models/Action.model';
import { Autocomplete200Response } from '../models/Autocomplete200Response.model';
import { AutocompleteRequest } from '../models/AutocompleteRequest.model';
import { CancelTask200Response } from '../models/CancelTask200Response.model';
import { DryRun200Response } from '../models/DryRun200Response.model';
import { DryRunRequest } from '../models/DryRunRequest.model';
import { ListTasksResponse } from '../models/ListTasksResponse.model';
import { Scaffold201Response } from '../models/Scaffold201Response.model';
import { Scaffold400Response } from '../models/Scaffold400Response.model';
import { ScaffolderScaffoldOptions } from '../models/ScaffolderScaffoldOptions.model';
import { SerializedTask } from '../models/SerializedTask.model';
import { SerializedTaskEvent } from '../models/SerializedTaskEvent.model';
import { TemplateParameterSchema } from '../models/TemplateParameterSchema.model';

/**
 * @public
 */
export type Autocomplete = {
  path: {
    provider: string;
    resource: string;
  };
  body: AutocompleteRequest;
  response: Autocomplete200Response;
};
/**
 * @public
 */
export type CancelTask = {
  path: {
    taskId: string;
  };
  response: CancelTask200Response;
};
/**
 * @public
 */
export type DryRun = {
  body: DryRunRequest;
  response: DryRun200Response | Scaffold400Response;
};
/**
 * @public
 */
export type GetTask = {
  path: {
    taskId: string;
  };
  response: SerializedTask;
};
/**
 * @public
 */
export type GetTemplateParameterSchema = {
  path: {
    namespace: string;
    kind: string;
    name: string;
  };
  response: TemplateParameterSchema | Error | Error;
};
/**
 * @public
 */
export type ListActions = {
  response: Array<Action>;
};
/**
 * @public
 */
export type ListTasks = {
  query: {
    createdBy?: string;
    limit?: number;
    offset?: number;
    order?: 'asc' | 'desc';
    status?: string;
  };
  response: ListTasksResponse;
};
/**
 * @public
 */
export type Retry = {
  path: {
    taskId: string;
  };
  response: Scaffold201Response;
};
/**
 * @public
 */
export type Scaffold = {
  body: ScaffolderScaffoldOptions;
  response: Scaffold201Response | Scaffold400Response;
};
/**
 * @public
 */
export type StreamLogsEventStream = {
  path: {
    taskId: string;
  };
  query: {
    after?: number;
  };
  response: string;
};
/**
 * @public
 */
export type StreamLogsPolling = {
  path: {
    taskId: string;
  };
  query: {
    after?: number;
  };
  response: Array<SerializedTaskEvent>;
};

/**
 * no description
 */

export type EndpointMap = {
  '#post|/v2/autocomplete/{provider}/{resource}': Autocomplete;

  '#post|/v2/tasks/{taskId}/cancel': CancelTask;

  '#post|/v2/dry-run': DryRun;

  '#get|/v2/tasks/{taskId}': GetTask;

  '#get|/v2/templates/{namespace}/{kind}/{name}/parameter-schema': GetTemplateParameterSchema;

  '#get|/v2/actions': ListActions;

  '#get|/v2/tasks': ListTasks;

  '#post|/v2/tasks/{taskId}/retry': Retry;

  '#post|/v2/tasks': Scaffold;

  '#get|/v2/tasks/{taskId}/eventstream': StreamLogsEventStream;

  '#get|/v2/tasks/{taskId}/events': StreamLogsPolling;
};
